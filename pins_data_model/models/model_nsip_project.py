# generated by datamodel-codegen:
#   filename:  nsip-project.schema.json
#   timestamp: 2025-10-30T20:02:32+00:00

from __future__ import annotations

from enum import Enum
from typing import Any

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field


class Decision(Enum):
    """
    Decision outcome: approved/refused/split-decision/granted/partially_consented/quashed/redetermination/withdrawn
    """

    approved = "approved"
    refused = "refused"
    split_decision = "split-decision"
    granted = "granted"
    partially_consented = "partially_consented"
    quashed = "quashed"
    redetermination = "redetermination"
    withdrawn = "withdrawn"
    NoneType_None = None


class PublishStatus(Enum):
    published = "published"
    unpublished = "unpublished"
    NoneType_None = None


class Sector(Enum):
    """
    {Sector Abbreviation} - {Sector Display Name}
    """

    BC___Business_and_Commercial = "BC - Business and Commercial"
    EN___Energy = "EN - Energy"
    TR___Transport = "TR - Transport"
    WA___Water = "WA - Water"
    WS___Waste = "WS - Waste"
    WW___Waste_Water = "WW - Waste Water"
    NoneType_None = None


class ProjectType(Enum):
    """
    {SubSector Abbreviation} - {SubSector Display Name}
    """

    BC01___Office_Use = "BC01 - Office Use"
    BC02___Research_and_Development_of_Products_or_Processes = (
        "BC02 - Research and Development of Products or Processes"
    )
    BC03___An_Industrial_Process_or_Processes = (
        "BC03 - An Industrial Process or Processes"
    )
    BC04___Storage_or_Distribution_of_Goods = "BC04 - Storage or Distribution of Goods"
    BC05___Conferences = "BC05 - Conferences"
    BC06___Exhibitions = "BC06 - Exhibitions"
    BC07___Sport = "BC07 - Sport"
    BC08___Leisure = "BC08 - Leisure"
    BC09___Tourism = "BC09 - Tourism"
    EN01___Generating_Stations = "EN01 - Generating Stations"
    EN02___Electric_Lines = "EN02 - Electric Lines"
    EN03___Underground_Gas_Storage_Facilities = (
        "EN03 - Underground Gas Storage Facilities"
    )
    EN04___LNG_Facilities = "EN04 - LNG Facilities"
    EN05___Gas_Reception_Facilities = "EN05 - Gas Reception Facilities"
    EN06___Gas_Transporter_Pipe_lines = "EN06 - Gas Transporter Pipe-lines"
    EN07___Other_Pipe_lines = "EN07 - Other Pipe-lines"
    TR01___Highways = "TR01 - Highways"
    TR02___Airports = "TR02 - Airports"
    TR03___Harbour_Facilities = "TR03 - Harbour Facilities"
    TR04___Railways = "TR04 - Railways"
    TR05___Rail_Freight_Interchanges = "TR05 - Rail Freight Interchanges"
    WS01___Hazardous_Waste_Facilities = "WS01 - Hazardous Waste Facilities"
    WW01___Waste_Water_Treatment_Plants = "WW01 - Waste Water Treatment Plants"
    WA01___Dams_and_Reservoirs = "WA01 - Dams and Reservoirs"
    WA02___Transfer_of_Water_Resources = "WA02 - Transfer of Water Resources"
    NoneType_None = None


class SourceSystem(Enum):
    back_office_applications = "back-office-applications"
    horizon = "horizon"


class Stage(Enum):
    """
    Process stage identifier
    """

    draft = "draft"
    pre_application = "pre_application"
    acceptance = "acceptance"
    pre_examination = "pre_examination"
    examination = "examination"
    recommendation = "recommendation"
    decision = "decision"
    post_decision = "post_decision"
    withdrawn = "withdrawn"
    NoneType_None = None


class Region(Enum):
    """
    Geographical region of UK. Applications can cover multiple regions.
    """

    east_midlands = "east_midlands"
    eastern = "eastern"
    london = "london"
    north_east = "north_east"
    north_west = "north_west"
    south_east = "south_east"
    south_west = "south_west"
    wales = "wales"
    west_midlands = "west_midlands"
    yorkshire_and_the_humber = "yorkshire_and_the_humber"


class MapZoomLevel(Enum):
    """
    Resolution of pinned map. Set when co-ordinates are created.
    """

    country = "country"
    region = "region"
    county = "county"
    borough = "borough"
    district = "district"
    city = "city"
    town = "town"
    junction = "junction"
    none = "none"
    NoneType_None = None


class Recommendation(Enum):
    """
    Recommendation
    """

    recommend_consent = "recommend_consent"
    recommend_partial_consent = "recommend_partial_consent"
    recommend_refusal = "recommend_refusal"
    NoneType_None = None


class Tier(Enum):
    """
    Tier
    """

    basic = "basic"
    standard = "standard"
    enhanced = "enhanced"
    NoneType_None = None


class PrincipalAreaDisagreementSummaryStmt(Enum):
    """
    Principal area disagreement summary statement (PADSS)
    """

    submitted_by_applicant = "submitted_by_applicant"
    awaiting_submission = "awaiting_submission"
    not_applicable = "not_applicable"
    NoneType_None = None


class PolicyComplianceDocument(Enum):
    """
    Policy compliance document (PCD)
    """

    submitted_by_applicant = "submitted_by_applicant"
    awaiting_submission = "awaiting_submission"
    not_applicable = "not_applicable"
    NoneType_None = None


class DesignApproachDocument(Enum):
    """
    Design approach document (DAD)
    """

    submitted_by_applicant = "submitted_by_applicant"
    awaiting_submission = "awaiting_submission"
    not_applicable = "not_applicable"
    NoneType_None = None


class MatureOutlineControlDocument(Enum):
    """
    Mature outline control documents
    """

    submitted_by_applicant = "submitted_by_applicant"
    awaiting_submission = "awaiting_submission"
    not_applicable = "not_applicable"
    NoneType_None = None


class CaAndTpEvidence(Enum):
    """
    CA and TP evidence
    """

    submitted_by_applicant = "submitted_by_applicant"
    awaiting_submission = "awaiting_submission"
    not_applicable = "not_applicable"
    NoneType_None = None


class PublicSectorEqualityDuty(Enum):
    """
    Public sector equality duty (PSED)
    """

    submitted_by_applicant = "submitted_by_applicant"
    awaiting_submission = "awaiting_submission"
    not_applicable = "not_applicable"
    NoneType_None = None


class FastTrackAdmissionDocument(Enum):
    """
    Fast track admission document
    """

    submitted_by_applicant = "submitted_by_applicant"
    awaiting_submission = "awaiting_submission"
    not_applicable = "not_applicable"
    NoneType_None = None


class MultipartyApplicationCheckDocument(Enum):
    """
    Multiparty application readiness gate-check (trial)
    """

    submitted_by_applicant = "submitted_by_applicant"
    awaiting_submission = "awaiting_submission"
    not_applicable = "not_applicable"
    NoneType_None = None


class SubProjectType(Enum):
    """
    Project type
    """

    energy_from_waste = "energy_from_waste"
    gas_power_station = "gas_power_station"
    hydrogen_power_station = "hydrogen_power_station"
    nuclear = "nuclear"
    offshore_wind = "offshore_wind"
    onshore_wind = "onshore_wind"
    solar = "solar"
    NoneType_None = None


class NewMaturity(Enum):
    """
    New maturity
    """

    a = "a"
    b = "b"
    c = "c"
    d = "d"
    e = "e"
    f = "f"
    g = "g"
    NoneType_None = None


class PlanningInspectorateRole(Enum):
    """
    Planning Inspectorate role
    """

    facilitator = "facilitator"
    advisor = "advisor"
    observer = "observer"
    NoneType_None = None


class Meeting(BaseModel):
    """
    A meeting related to the project
    """

    model_config = ConfigDict(
        extra="allow",
    )
    meetingAgenda: str | None = Field(None, examples=["Flood Risk Assessment (FRA)"])
    """
    Meeting agenda
    """
    planningInspectorateRole: PlanningInspectorateRole | None = Field(
        None, examples=["facilitator"]
    )
    """
    Planning Inspectorate role
    """
    meetingDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Meeting date
    """
    meetingType: str | None = None
    """
    Type of Meeting
    """


class InvoiceStage(Enum):
    """
    Invoice stage
    """

    pre_acceptance = "pre_acceptance"
    acceptance = "acceptance"
    pre_examination = "pre_examination"
    initial_examination = "initial_examination"
    final_examination = "final_examination"
    NoneType_None = None


class Invoice(BaseModel):
    """
    An invoice related to the project
    """

    model_config = ConfigDict(
        extra="allow",
    )
    invoiceStage: InvoiceStage | None = Field(None, examples=["pre_acceptance"])
    """
    Invoice stage
    """
    invoiceNumber: str = Field(..., examples=["1800004419"])
    """
    Invoice number
    """
    amountDue: float = Field(..., examples=[500])
    """
    Amount due
    """
    paymentDueDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Payment due date
    """
    invoicedDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Invoiced date
    """
    paymentDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date of payment
    """
    refundCreditNoteNumber: str | None = Field(None, examples=["1800004419"])
    """
    Refund credit note number
    """
    refundAmount: float | None = Field(None, examples=[200])
    """
    Amount refunded
    """
    refundIssueDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Refund issue date
    """


class NsipProject(BaseModel):
    """
    Subset of Pins Data Model [Case]
    """

    model_config = ConfigDict(
        extra="allow",
    )
    caseId: int = Field(..., examples=[1242])
    """
    The unique identifier within the Back Office. This is not the same as the case reference
    """
    caseReference: str | None = Field(..., examples=["BC0510001"])
    projectName: str | None = Field(
        ..., examples=["A1 Birtley to Coal House Improvement Scheme"]
    )
    """
    Name of project
    """
    projectNameWelsh: str | None = None
    """
    Name of project in Welsh
    """
    projectDescription: str | None = Field(
        ...,
        examples=[
            "The scheme is 6.5 km in length and will consist of online widening of the A1 south of Gateshead to four lanes between junction 65"
        ],
    )
    projectDescriptionWelsh: str | None = None
    decision: Decision
    """
    Decision outcome: approved/refused/split-decision/granted/partially_consented/quashed/redetermination/withdrawn
    """
    publishStatus: PublishStatus
    sector: Sector
    """
    {Sector Abbreviation} - {Sector Display Name}
    """
    projectType: ProjectType
    """
    {SubSector Abbreviation} - {SubSector Display Name}
    """
    sourceSystem: SourceSystem
    stage: Stage
    """
    Process stage identifier
    """
    projectLocation: str | None = Field(
        ...,
        examples=[
            "The scheme is located on the A1 Newcastle Gateshead Western Bypass, between junctions 65 and 67."
        ],
    )
    """
    Description of site location
    """
    projectLocationWelsh: str | None = None
    """
    Description of site location in Welsh
    """
    projectEmailAddress: str | None = Field(
        ..., examples=["NIEnquiries@planninginspectorate.gsi.gov.uk"]
    )
    """
    PINS Project email address pubished on website
    """
    regions: list[Region]
    transboundary: bool | None = Field(..., examples=[True, False])
    """
    Drives addition of Transboundary tab on website. [TODO]
    """
    easting: int | None = Field(..., examples=[345678])
    """
    Project site Easting co-ordinate.
    """
    northing: int | None = Field(..., examples=[345678])
    """
    Project site Northing co-ordinate.
    """
    welshLanguage: bool | None = Field(..., examples=[True, False])
    """
    Welsh Language translation required.
    """
    mapZoomLevel: MapZoomLevel
    """
    Resolution of pinned map. Set when co-ordinates are created.
    """
    secretaryOfState: str | None = None
    """
    Relevant Government Department. [TODO]
    """
    field_preApplicationDates: Any | None = Field(None, alias="_preApplicationDates")
    datePINSFirstNotifiedOfProject: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date at which applicant notify PINS of a project (pre-publishing)
    """
    dateProjectAppearsOnWebsite: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date Project Appears On Website
    """
    anticipatedSubmissionDateNonSpecific: str | None = Field(..., examples=["Q3 2023"])
    """
    Approximate Anticipated Submission Date Of Application, e.g. Q3 2023
    """
    anticipatedDateOfSubmission: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Anticipated Submission Date Of Application
    """
    screeningOpinionSought: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    (TBC by Env. Services Team)
    """
    screeningOpinionIssued: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    (TBC by Env. Services Team)
    """
    scopingOpinionSought: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    (TBC by Env. Services Team)
    """
    scopingOpinionIssued: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    (TBC by Env. Services Team)
    """
    section46Notification: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Applicant must notify PINS of statutory consultation
    """
    field_acceptanceDates: Any | None = Field(None, alias="_acceptanceDates")
    dateOfDCOSubmission: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date Applcation is submitted
    """
    deadlineForAcceptanceDecision: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    DeadlineForAcceptanceDecision
    """
    dateOfDCOAcceptance: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date Application is Formerly Accepted by PINS
    """
    dateOfNonAcceptance: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date of Non Acceptance
    """
    field_preExaminationDates: Any | None = Field(None, alias="_preExaminationDates")
    dateOfRepresentationPeriodOpen: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date at which point publish can submit relevant reps
    """
    dateOfRelevantRepresentationClose: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date at which point publish can no longer submit relevant reps
    """
    extensionToDateRelevantRepresentationsClose: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    ExtensionToDateRelevantRepresentationsClose
    """
    dateRRepAppearOnWebsite: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date at which relevant reps appear on the website
    """
    dateIAPIDue: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    rule6LetterPublishDate: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    preliminaryMeetingStartDate: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Meeting between all parties inc public
    """
    notificationDateForPMAndEventsDirectlyFollowingPM: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    notificationDateForEventsDeveloper: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    field_examinationDates: Any | None = Field(None, alias="_examinationDates")
    dateSection58NoticeReceived: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Applicant has notified all parties of application
    """
    confirmedStartOfExamination: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    ConfirmedStartOfExamination by panel
    """
    rule8LetterPublishDate: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    deadlineForCloseOfExamination: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    DeadlineForCloseOfExamination
    """
    dateTimeExaminationEnds: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    ConfirmedSEndOfExamination by panel
    """
    stage4ExtensionToExamCloseDate: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Examination Period extended to this date
    """
    field_recommendationDates: Any | None = Field(None, alias="_recommendationDates")
    deadlineForSubmissionOfRecommendation: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    DeadlineForSubmissionOfRecommendation
    """
    dateOfRecommendations: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date recomm report sent to SoS
    """
    stage5ExtensionToRecommendationDeadline: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Recommendation period extended to this date
    """
    field_decisionDates: Any | None = Field(None, alias="_decisionDates")
    deadlineForDecision: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    DeadlineForDecision
    """
    confirmedDateOfDecision: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Decision by SoS
    """
    stage5ExtensionToDecisionDeadline: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Decision period extended to this date
    """
    field_postDecisionDates: Any | None = Field(None, alias="_postDecisionDates")
    jRPeriodEndDate: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Judicial Review
    """
    field_withdrawalDates: Any | None = Field(None, alias="_withdrawalDates")
    dateProjectWithdrawn: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    DateProjectWithdrawn by applicant
    """
    operationsLeadId: str | None = None
    """
    Maps to [Employee].[EmployeeID].
    """
    operationsManagerId: str | None = None
    """
    New NSIP role, Maps to [Employee].[EmployeeID]
    """
    caseManagerId: str | None = None
    """
    Maps to [Employee].[EmployeeID]
    """
    nsipOfficerIds: list[str]
    nsipAdministrationOfficerIds: list[str]
    leadInspectorId: str | None = None
    """
    Maps to [Employee].[EmployeeID]
    """
    inspectorIds: list[str]
    environmentalServicesOfficerId: str | None = None
    """
    Maps to [Employee].[EmployeeID]
    """
    legalOfficerId: str | None = None
    """
    Maps to [Employee].[EmployeeID]
    """
    applicantId: str | None = None
    """
    Maps to [ServiceUser].[id] where the serviceUserType is Applicant
    """
    migrationStatus: bool | None = None
    """
    Has this case been migrated from the legacy system? True if so.
    """
    dateOfReOpenRelevantRepresentationStart: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date at which relevant reps can be reopened
    """
    dateOfReOpenRelevantRepresentationClose: AwareDatetime | None = Field(
        ..., examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date at which relevant reps can no longer be reopened
    """
    isMaterialChange: bool | None = Field(None, examples=[True, False])
    """
    Is this an application for a material change?
    """
    courtDecisionDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date of court decision
    """
    courtDecisionOutcomeText: str | None = Field(None, examples=["upheld"])
    """
    Court decision outcome text; values include 'upheld','partially_upheld','quashed','other:<Text>'
    """
    decisionChallengeSubmissionDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date of decision challenge submission
    """
    recommendation: Recommendation | None = Field(None, examples=["recommend_consent"])
    """
    Recommendation
    """
    inceptionMeetingDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date of inception meeting
    """
    draftDocumentSubmissionDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date for submission of draft documents
    """
    programmeDocumentSubmissionDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Programme document submission date
    """
    tier: Tier | None = Field(None, examples=["basic"])
    """
    Tier
    """
    s61SummaryURI: str | None = Field(None, examples=["s61.sharepoint.com/"])
    """
    Link to s61 summary
    """
    estimatedScopingSubmissionDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Estimated scoping submission date
    """
    consultationMilestoneAdequacyDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Adequacy of Consultation Milestone
    """
    planProcessEvidence: bool | None = Field(None, examples=[True])
    """
    Evidence plan process
    """
    issuesTracker: str | None = Field(None, examples=["tracker.sharepoint.com/"])
    """
    Issues tracker
    """
    essentialFastTrackComponents: bool | None = Field(None, examples=[True])
    """
    Essential fast track components
    """
    principalAreaDisagreementSummaryStmt: (
        PrincipalAreaDisagreementSummaryStmt | None
    ) = Field(None, examples=["submitted_by_applicant"])
    """
    Principal area disagreement summary statement (PADSS)
    """
    principalAreaDisagreementSummaryStmtSubmittedDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Principal area disagreement summary statement (PADSS) Submitted date
    """
    policyComplianceDocument: PolicyComplianceDocument | None = Field(
        None, examples=["submitted_by_applicant"]
    )
    """
    Policy compliance document (PCD)
    """
    policyComplianceDocumentSubmittedDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Policy compliance document (PCD) Submitted Date
    """
    designApproachDocument: DesignApproachDocument | None = Field(
        None, examples=["submitted_by_applicant"]
    )
    """
    Design approach document (DAD)
    """
    designApproachDocumentSubmittedDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Design approach document (DAD) Submitted Date
    """
    matureOutlineControlDocument: MatureOutlineControlDocument | None = Field(
        None, examples=["submitted_by_applicant"]
    )
    """
    Mature outline control documents
    """
    matureOutlineControlDocumentSubmittedDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Mature outline control documents Submitted Date
    """
    caAndTpEvidence: CaAndTpEvidence | None = Field(
        None, examples=["submitted_by_applicant"]
    )
    """
    CA and TP evidence
    """
    caAndTpEvidenceSubmittedDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    CA and TP evidence Submitted Date
    """
    publicSectorEqualityDuty: PublicSectorEqualityDuty | None = Field(
        None, examples=["submitted_by_applicant"]
    )
    """
    Public sector equality duty (PSED)
    """
    publicSectorEqualityDutySubmittedDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Public sector equality duty (PSED) Submitted Date
    """
    fastTrackAdmissionDocument: FastTrackAdmissionDocument | None = Field(
        None, examples=["submitted_by_applicant"]
    )
    """
    Fast track admission document
    """
    fastTrackAdmissionDocumentSubmittedDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Fast track admission document Submitted Date
    """
    multipartyApplicationCheckDocument: MultipartyApplicationCheckDocument | None = (
        Field(None, examples=["submitted_by_applicant"])
    )
    """
    Multiparty application readiness gate-check (trial)
    """
    multipartyApplicationCheckDocumentSubmittedDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Multiparty application readiness gate-check Submitted Date (trial)
    """
    programmeDocumentURI: str | None = Field(None, examples=["progdoc.sharepoint.com/"])
    """
    Link to programme document
    """
    updatedProgrammeDocumentReceivedDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date updated programme document is received
    """
    programmeDocumentReviewedByEstDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date programme document reviewed by EST
    """
    caseTeamIssuedCommentsDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date case team issued comments on programme document
    """
    subProjectType: SubProjectType | None = Field(None, examples=["solar"])
    """
    Project type
    """
    newMaturity: NewMaturity | None = Field(None, examples=["a"])
    """
    New maturity
    """
    statutoryConsultationPeriodEndDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Statutory consultation period end date
    """
    submissionOfDraftDocumentsDate: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    Date for submission of draft documents
    """
    numberBand2Inspectors: float | None = Field(None, examples=[1])
    """
    Number of band 2 inspectors
    """
    numberBand3Inspectors: float | None = Field(None, examples=[2])
    """
    Number of band 3 inspectors
    """
    memLastUpdated: AwareDatetime | None = Field(
        None, examples=["2023-07-27T20:30:00.000Z"]
    )
    """
    MEM (last updated)
    """
    additionalComments: str | None = Field(
        None,
        examples=["Very likely to change tier from standard to basic after April 2025"],
    )
    """
    Additional comments
    """
    operationsLeadIds: list[str] | None = Field(
        None,
        examples=[["9bee96d2-00fe-4269-9d01-8c66", "9bee96d2-00fe-4269-9d01-8c22"]],
    )
    """
    Maps to [Employee].[EmployeeID].
    """
    operationsManagerIds: list[str] | None = Field(
        None,
        examples=[["9bee96d2-00fe-4269-9d01-8c66", "9bee96d2-00fe-4269-9d01-8c22"]],
    )
    """
    New NSIP role, Maps to [Employee].[EmployeeID]
    """
    caseManagerIds: list[str] | None = Field(
        None,
        examples=[["9bee96d2-00fe-4269-9d01-8c66", "9bee96d2-00fe-4269-9d01-8c22"]],
    )
    """
    Maps to [Employee].[EmployeeID].
    """
    leadInspectorIds: list[str] | None = Field(
        None,
        examples=[["9bee96d2-00fe-4269-9d01-8c66", "9bee96d2-00fe-4269-9d01-8c22"]],
    )
    """
    Maps to [Employee].[EmployeeID].
    """
    environmentalServicesOfficerIds: list[str] | None = Field(
        None,
        examples=[["9bee96d2-00fe-4269-9d01-8c66", "9bee96d2-00fe-4269-9d01-8c22"]],
    )
    """
    Maps to [Employee].[EmployeeID].
    """
    legalOfficerIds: list[str] | None = Field(
        None,
        examples=[["9bee96d2-00fe-4269-9d01-8c66", "9bee96d2-00fe-4269-9d01-8c22"]],
    )
    """
    Maps to [Employee].[EmployeeID].
    """
    meetings: list[Meeting] | None = None
    """
    Collection of meetings associated with this project
    """
    invoices: list[Invoice] | None = None
    """
    Collection of invoices associated with this project
    """
